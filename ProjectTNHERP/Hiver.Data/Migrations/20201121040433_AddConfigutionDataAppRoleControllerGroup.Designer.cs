// <auto-generated />
using System;
using Hiver.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hiver.Data.Migrations
{
    [DbContext(typeof(HiverDbContext))]
    [Migration("20201121040433_AddConfigutionDataAppRoleControllerGroup")]
    partial class AddConfigutionDataAppRoleControllerGroup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hiver.Data.Entities.AppController", b =>
                {
                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("Licensed")
                        .HasColumnType("bit");

                    b.HasKey("Controller", "Action");

                    b.ToTable("AppControllers");

                    b.HasData(
                        new
                        {
                            Controller = "User",
                            Action = "Index",
                            Description = "Quản lý User",
                            Licensed = true
                        },
                        new
                        {
                            Controller = "Home",
                            Action = "Index",
                            Description = "Trang Chủ",
                            Licensed = true
                        });
                });

            modelBuilder.Entity("Hiver.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            ConcurrencyStamp = "651c9c87-1f07-462c-9478-36b4d6f67b2f",
                            Description = "Administrator role",
                            Name = "Administrator",
                            NormalizedName = "Cấp 1"
                        },
                        new
                        {
                            Id = new Guid("44694fab-619c-4bcc-a8a1-4247a17905f5"),
                            ConcurrencyStamp = "57ab6088-20a1-4302-829e-734482558e2b",
                            Description = "BanHang",
                            Name = "BanHang",
                            NormalizedName = "Cấp 2"
                        },
                        new
                        {
                            Id = new Guid("80b0a1ac-d287-4ba3-92c4-51cbcea55920"),
                            ConcurrencyStamp = "4dabc972-1d5e-4619-ab2c-7a2dce2251a9",
                            Description = "Mua hàng",
                            Name = "MuaHang",
                            NormalizedName = "Cấp 2"
                        },
                        new
                        {
                            Id = new Guid("2629553d-758a-460b-92cf-5c34b76a97a7"),
                            ConcurrencyStamp = "9f47e40e-9847-4ecb-95fa-d7112923d2dc",
                            Description = "Kho",
                            Name = "Kho",
                            NormalizedName = "Cấp 2"
                        },
                        new
                        {
                            Id = new Guid("7feb5851-4244-4538-a6bd-3b98c18afeee"),
                            ConcurrencyStamp = "5e141fe4-295d-4347-b18d-d6a15662caab",
                            Description = "Nhân Sự",
                            Name = "Nhansu",
                            NormalizedName = "Cấp 2"
                        });
                });

            modelBuilder.Entity("Hiver.Data.Entities.AppRoleController", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("IdAppUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleControllers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Action = "Index",
                            Controller = "User",
                            IdAppUser = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de")
                        },
                        new
                        {
                            Id = 2,
                            Action = "Index",
                            Controller = "Home",
                            IdAppUser = new Guid("a3335a51-c19b-4ec8-9dec-39ef33e69bf7")
                        },
                        new
                        {
                            Id = 3,
                            Action = "Index",
                            Controller = "Home",
                            IdAppUser = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de")
                        });
                });

            modelBuilder.Entity("Hiver.Data.Entities.AppRoleControllerGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdRole")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleControllerGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Action = "Index",
                            Controller = "User",
                            IdRole = new Guid("7feb5851-4244-4538-a6bd-3b98c18afeee")
                        },
                        new
                        {
                            Id = 2,
                            Action = "Delete",
                            Controller = "User",
                            IdRole = new Guid("7feb5851-4244-4538-a6bd-3b98c18afeee")
                        },
                        new
                        {
                            Id = 3,
                            Action = "EDIT",
                            Controller = "User",
                            IdRole = new Guid("7feb5851-4244-4538-a6bd-3b98c18afeee")
                        },
                        new
                        {
                            Id = 4,
                            Action = "DETAIL",
                            Controller = "User",
                            IdRole = new Guid("7feb5851-4244-4538-a6bd-3b98c18afeee")
                        });
                });

            modelBuilder.Entity("Hiver.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cd5073f7-8e7b-46ea-9cca-ef89af94c5f1",
                            Dob = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Nguyễn",
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "admin@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEJwtLl8Tt1Yx7l4NKC1+TtweuKKIfpN60ozRkbCZIO1OsjnUS2mIkMyHHMM26X18PQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("a3335a51-c19b-4ec8-9dec-39ef33e69bf7"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7dc47abc-ea3e-4ff2-b480-824cab2eae52",
                            Dob = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "it@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Nguyễn",
                            LastName = "It",
                            LockoutEnabled = false,
                            NormalizedEmail = "it@gmail.com",
                            NormalizedUserName = "it",
                            PasswordHash = "AQAAAAEAACcQAAAAEJNAR2ft4ElYI+oVFcDxKEW9uif2F91ssvF5fbjdWpZBoki8nh0Sam6F4gv47PT/VA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "it"
                        },
                        new
                        {
                            Id = new Guid("171f3098-762c-4b02-85c5-a687f6601de4"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "09f5af09-5ec8-4304-8aa2-5b8fac498cec",
                            Dob = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "kho@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Nguyễn",
                            LastName = "Kho",
                            LockoutEnabled = false,
                            NormalizedEmail = "kho@gmail.com",
                            NormalizedUserName = "kho",
                            PasswordHash = "AQAAAAEAACcQAAAAEDX5sjy5roghVUlb7hXK9SOhbdxm1xSI/uApgjWsTvymnOSMSvp9nJHAcWizxIuykg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "kho"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}

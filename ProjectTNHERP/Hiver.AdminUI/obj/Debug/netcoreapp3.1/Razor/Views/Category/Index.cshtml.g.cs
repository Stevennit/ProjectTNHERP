#pragma checksum "D:\Project Code\ProjectTNHERP\ProjectTNHERP\Hiver.AdminUI\Views\Category\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ee615c7097626ee24b4378822ae4a35d943173d4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Category_Index), @"mvc.1.0.view", @"/Views/Category/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Project Code\ProjectTNHERP\ProjectTNHERP\Hiver.AdminUI\Views\_ViewImports.cshtml"
using Hiver.AdminUI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Project Code\ProjectTNHERP\ProjectTNHERP\Hiver.AdminUI\Views\_ViewImports.cshtml"
using Hiver.AdminUI.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ee615c7097626ee24b4378822ae4a35d943173d4", @"/Views/Category/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1650bdb68ad44896002f9eeeb33a0559ffcc764a", @"/Views/_ViewImports.cshtml")]
    public class Views_Category_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Project Code\ProjectTNHERP\ProjectTNHERP\Hiver.AdminUI\Views\Category\Index.cshtml"
  
    ViewBag.Title = "File Manager";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div id=\"elfinder\"></div>\r\n\r\n\r\n");
            DefineSection("Css", async() => {
                WriteLiteral("\r\n    <link rel=\"stylesheet\" href=\"lib/elfinder/css/theme.css\" /> ");
                WriteLiteral(@"
    <!-- Begin Add ElFinder Css-->
    <link href=""lib/jqueryui/themes/base/theme.css"" rel=""stylesheet"" />
    <link href=""lib/jqueryui/themes/base/jquery-ui.css"" rel=""stylesheet"" />
    <link rel=""stylesheet"" href=""lib/elfinder/css/elfinder.full.css"" />
    <!-- End Add ElFinder Css-->

");
            }
            );
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <!-- Begin Add ElFinder Css-->
    <script src=""lib/jqueryui/jquery-ui.js""></script>
    <script src=""lib/elfinder/js/elfinder.full.js""></script>

    <script type=""text/javascript"">
		// Documentation for client options:
		// https://github.com/Studio-42/elFinder/wiki/Client-configuration-options
        $(document).ready(function () {
            var myCommands = elFinder.prototype._options.commands;
            var disabled = ['callback', 'chmod', 'editor', 'netmount', 'ping', 'zipdl', 'help']; // Not yet implemented commands in elFinder.NetCore
            elFinder.prototype.i18.en.messages.TextArea = ""Edit"";
            elFinder.prototype.i18.en.messages.errNewNameSelection = 'Unable to create new file with name ""$1""';

            $.each(disabled, function (i, cmd) {
                (idx = $.inArray(cmd, myCommands)) !== -1 && myCommands.splice(idx, 1);
            });

            var options = {
                //url: '/el-finder/file-system/connector', // Default (Local File S");
                WriteLiteral("ystem)\r\n                url: \'https://localhost:5001/api/FileSystem/connector\',\r\n");
                WriteLiteral(@"                rememberLastDir: false, // Prevent elFinder saving in the Browser LocalStorage the last visited directory
                commands: myCommands,
                //lang: 'pt_BR', // elFinder supports UI and messages localization. Check the folder Content\elfinder\js\i18n for all available languages. Be sure to include the corresponding .js file(s) in the JavaScript bundle.
                uiOptions: { // UI buttons available to the user
                    toolbar: [
                        ['back', 'forward'],
                        ['reload'],
                        ['home', 'up'],
                        ['mkdir', 'mkfile', 'upload'],
                        ['open', 'download'],
                        ['undo', 'redo'],
                        ['info'],
                        ['quicklook'],
                        ['copy', 'cut', 'paste'],
                        ['rm'],
                        ['duplicate', 'rename', 'edit'],
                        ['selectall', 'selectn");
                WriteLiteral(@"one', 'selectinvert'],
                        ['view', 'sort'],
                        ['search']
                    ]
                },
                contextmenu: {
                    files: [
                        'getfile', '|', 'open', '|', 'copy', 'cut', 'paste', 'duplicate', '|',
                        'rm', '|', 'edit', 'rename', '|', 'archive', 'extract', '|', 'info'
                    ]
                },
                //onlyMimes: [""image"", ""text/plain""], // Get files of requested mime types only
                //lang: 'vi', // Change language
            };
            $('#elfinder').elfinder(options).elfinder('instance');
        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
